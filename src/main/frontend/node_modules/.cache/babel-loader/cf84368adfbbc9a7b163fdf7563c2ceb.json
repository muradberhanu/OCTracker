{"ast":null,"code":"var _jsxFileName = \"/Users/MuradBehanu/Downloads/OCTracker/src/main/frontend/src/App.js\";\n// import logo from './logo.svg';\nimport React from \"react\";\nimport './App.css';\nimport axios from \"axios\"; // const RouteSummaryForStop = () =>{\n//   const fetchRouteSummaryForStop = () => {\n//     axios.get(\"http://localhost:8080/GetRouteSummaryForStopResult/0893/\").then(res => {\n//         console.log(res);\n//     });\n//   }\n//\n//   useEffect(() => {\n//     fetchRouteSummaryForStop();\n//   }, [])\n//\n//   return <h1>OCTracker</h1>\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StopForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stopNo: '',\n      stop: null,\n      submitted: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      stopNo: event.target.value,\n      submitted: false,\n      stop: this.state.stop\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); //const [stop, setStop] = useState([]);\n\n    if (this.state.stopNo === '') {\n      this.setState({\n        stopNo: 0\n      });\n    }\n\n    axios.get(\"http://localhost:8080/GetRouteSummaryForStopResult/\".concat(this.state.stopNo)).then(res => {\n      console.log(res); // this.state.submitted = true;\n      // this.state.stop = res.data;\n\n      this.setState({\n        stop: res.data,\n        submitted: true\n      }); // return (\n      //     <h1>this.state.stop.data.stopNo</h1> +\n      //     <h1>this.state.stop.data.stopDescription</h1> +\n      //     <ul>\n      //       {this.state.stop.data.routes.route.map(route => (\n      //           <li >\n      //             {this.state.stop.data.routeNo}\n      //           </li>\n      //       ))}\n      //     </ul>\n      // );\n    }).catch(error => {\n      this.setState({\n        stop: null,\n        submitted: false\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    const submitted = this.state.submitted;\n    let routeDiv = null;\n\n    if (submitted === true) {\n      routeDiv = /*#__PURE__*/_jsxDEV(RouteDiv, {\n        stop: this.state.stop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 18\n      }, this);\n    } else {\n      routeDiv = null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Stop:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: this.state.stopNo,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: routeDiv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass RouteDiv extends React.Component {\n  // stopNo = props.stop.stopNo;\n  // stopDescription = props.stop.stopDescription;\n  constructor(props) {\n    super(props);\n    this.state = {\n      stop: props.stop,\n      stopNo: props.stop.stopNo,\n      stopDescription: props.stop.stopDescription,\n      stopSelectedBool: false,\n      tripsDiv: null,\n      tripsForStop: null,\n      route: null\n    }; // this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleButton = this.handleButton.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n  }\n\n  componentDidUpdate() {\n    //if(this.props.request.message === 'ok'){\n    //  console.log('ok');\n    if (!this.state.stopSelectedBool) {\n      this.setState({\n        stopSelectedBool: true,\n        tripsDiv: /*#__PURE__*/_jsxDEV(TripsForRouteDiv, {\n          stopNo: this.state.stopNo,\n          route: this.state.route.routeNo,\n          stop: this.state.tripsForStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 31\n        }, this)\n      }); //   }\n      // this.props.history.push('/');\n      //path is ok!!!\n      //     console.log('path from history: ', this.props.history);\n    }\n  }\n\n  handleButton(route) {\n    // event.preventDefault();\n    if (this.state.route === null || this.state.route.routeNo !== route.routeNo) {\n      axios.get(\"http://localhost:8080/GetNextTripsForStopResult/\".concat(this.state.stopNo).concat(\"/\").concat(route.routeNo)).then(res => {\n        console.log(res); // stop = res.data;\n        // this.setState({tripsDiv: <TripsForRouteDiv stopNo={this.state.stopNo} route={route.routeNo} stop={res.data}/>});\n\n        this.setState({\n          route: route,\n          tripsForStop: res.data,\n          stopSelectedBool: true\n        });\n        this.setState({\n          tripsDiv: /*#__PURE__*/_jsxDEV(TripsForRouteDiv, {\n            stopNo: this.state.stopNo,\n            route: this.state.route.routeNo,\n            stop: this.state.tripsForStop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 42\n          }, this)\n        }); // this.state.tripsDiv = <TripsForRouteDiv stopNo={this.state.stopNo} route={route.routeNo} stop={res.data}/>;\n        // this.state.tripsDiv.setState({stop: res.data});\n      }).catch(error => {\n        //this.setState({stop: null});\n        this.setState({\n          tripsForStop: null,\n          tripsDiv: null\n        });\n        console.log(error);\n      }); //return (\n      // );\n    } else {\n      this.setState({\n        stopSelectedBool: true\n      });\n    } //const [stop, setStop] = useState([]);\n    // if(this.state.stopNo === ''){\n    //         //     this.setState({stopNo: 0});\n    //         // }\n    //         // axios.get(\"http://localhost:8080/GetRouteSummaryForStopResult/\".concat(this.state.stopNo)).then(res => {\n    //         //     console.log(res);\n    //         //\n    //         //     this.setState({stop: res.data, submitted: true});\n    //         // }).catch((error)=> {\n    //         //     this.setState({stop: null, submitted: false});\n    //         //     console.log(error);\n    //         // });\n\n  }\n\n  render() {\n    let tripsDiv = null;\n\n    if (this.state.tripsForStop !== null) {//tripsDiv = <TripsForRouteDiv stopNo={this.state.stopNo} route={this.state.route.routeNo} stop={this.state.tripsForStop}/>;\n      //this.setState({tripsDiv: <TripsForRouteDiv stopNo={this.state.stopNo} route={this.state.route.routeNo} stop={this.state.tripsForStop}/>});\n    } // else{\n    //\n    // }\n\n\n    if (this.state.stopDescription != null) {\n      //this.state.stopSelectedBool = true;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: this.state.stopNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: this.state.stopDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 22\n          }, this), this.state.stop.routes.route.map(route =>\n          /*#__PURE__*/\n          // <button key={route.routeNo}\n          //         onClick={() => this.handleButton(route)}>\n          //     {route.routeNo} {route.routeHeading}\n          // </button>\n          _jsxDEV(RouteButton, {\n            route: route,\n            onButtonClick: this.handleButton\n          }, route.routeNo + route.routeHeading, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 26\n          }, this) //TODO: all routes button!!!!\n          )]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.tripsDiv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 22\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Invalid stop number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 22\n      }, this);\n    }\n  }\n\n}\n\nclass RouteButton extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleButton = () => {\n      this.props.onButtonClick(this.props.route);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleButton,\n      children: [this.props.route.routeNo, \" \", this.props.route.routeHeading]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass TripsForRouteDiv extends React.Component {\n  constructor(props) {\n    super(props); // let date = new Date(), date = today.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n    // this.state = {\n    //\n    //     currentTime: time\n    //\n    // }\n\n    this.state = {\n      stop: props.stop,\n      stopNo: props.stopNo,\n      route: props.route,\n      // stopDescription: props.stop.stopDescription,\n      // stopSelectedBool: false,\n      dateVar: null,\n      arrivalTimeVar: null\n    }; //this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    // this.handleButton = this.handleButton.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.render();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.state.stop.stopNo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.state.stop.stopLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), this.state.stop.route.routeDirection.map(routeDirection => routeDirection.trips.trip.map(trip =>\n      /*#__PURE__*/\n      //adjustmentAge is -1 -> no gps\n      // <button key={trip.tripStartTime}>\n      //     {this.state.route} {trip.tripDestination} scheduled @\n      //     {\n      //     trip.adjustedScheduleTime\n      //     }\n      //     {\" | \"}\n      //     GPS: {trip.adjustmentAge === \"-1\"? \"no\": \"yes\"}\n      // </button>\n      _jsxDEV(TripButton, {\n        route: this.state.route,\n        trip: trip\n      }, trip.tripStartTime, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }, this)))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass TripButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleButton = () => {\n      this.props.onButtonClick(this.props.route);\n    };\n\n    this.state = {\n      route: props.route,\n      trip: props.trip\n    };\n  }\n\n  render() {\n    let time = new Date();\n    time.setHours(time.getHours(), time.getMinutes() + this.props.trip.adjustedScheduleTime, 0, 0);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleButton,\n      children: [this.state.route, \" \", this.state.trip.tripDestination, \" in \", this.state.trip.adjustedScheduleTime, \" minutes @\", time, \" | \", \"GPS: \", this.state.trip.adjustmentAge === \"-1\" ? \"no\" : \"yes\"]\n    }, this.state.trip.tripStartTime, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"OCTracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StopForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/MuradBehanu/Downloads/OCTracker/src/main/frontend/src/App.js"],"names":["React","axios","StopForm","Component","constructor","props","state","stopNo","stop","submitted","handleChange","bind","handleSubmit","event","setState","target","value","preventDefault","get","concat","then","res","console","log","data","catch","error","render","routeDiv","RouteDiv","stopDescription","stopSelectedBool","tripsDiv","tripsForStop","route","handleButton","componentDidUpdate","routeNo","routes","map","routeHeading","RouteButton","onButtonClick","TripsForRouteDiv","dateVar","arrivalTimeVar","stopLabel","routeDirection","trips","trip","tripStartTime","TripButton","time","Date","setHours","getHours","getMinutes","adjustedScheduleTime","tripDestination","adjustmentAge","App"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport React from \"react\";\nimport './App.css';\nimport axios from \"axios\";\n\n// const RouteSummaryForStop = () =>{\n//   const fetchRouteSummaryForStop = () => {\n//     axios.get(\"http://localhost:8080/GetRouteSummaryForStopResult/0893/\").then(res => {\n//         console.log(res);\n//     });\n//   }\n//\n//   useEffect(() => {\n//     fetchRouteSummaryForStop();\n//   }, [])\n//\n//   return <h1>OCTracker</h1>\n// }\n\nclass StopForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stopNo: '',\n      stop: null,\n      submitted: false,\n\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({stopNo: event.target.value, submitted:false, stop: this.state.stop});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    //const [stop, setStop] = useState([]);\n    if(this.state.stopNo === ''){\n        this.setState({stopNo: 0});\n    }\n    axios.get(\"http://localhost:8080/GetRouteSummaryForStopResult/\".concat(this.state.stopNo)).then(res => {\n      console.log(res);\n      // this.state.submitted = true;\n      // this.state.stop = res.data;\n      this.setState({stop: res.data, submitted: true});\n      // return (\n      //     <h1>this.state.stop.data.stopNo</h1> +\n      //     <h1>this.state.stop.data.stopDescription</h1> +\n      //     <ul>\n      //       {this.state.stop.data.routes.route.map(route => (\n      //           <li >\n      //             {this.state.stop.data.routeNo}\n      //           </li>\n      //       ))}\n      //     </ul>\n      // );\n    }).catch((error)=> {\n      this.setState({stop: null, submitted: false});\n      console.log(error);\n    });\n  }\n\n  render() {\n\n    const submitted = this.state.submitted;\n    let routeDiv = null;\n    if(submitted === true){\n      routeDiv = <RouteDiv stop={this.state.stop}/>\n    }\n    else{\n      routeDiv = null;\n    }\n\n    return (\n        <div>\n            <div>\n              <form onSubmit={this.handleSubmit}>\n                <label>\n                  Stop:\n                  <input type=\"text\" value={this.state.stopNo} onChange={this.handleChange} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n              </form>\n            </div>\n            <div>{routeDiv}</div>\n        </div>\n    );\n  }\n}\n\nclass RouteDiv extends React.Component{\n     // stopNo = props.stop.stopNo;\n     // stopDescription = props.stop.stopDescription;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            stop: props.stop,\n            stopNo: props.stop.stopNo,\n            stopDescription: props.stop.stopDescription,\n            stopSelectedBool: false,\n            tripsDiv: null,\n            tripsForStop: null,\n            route: null,\n        };\n\n        // this.handleChange = this.handleChange.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n         this.handleButton = this.handleButton.bind(this);\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    }\n\n    componentDidUpdate() {\n        //if(this.props.request.message === 'ok'){\n          //  console.log('ok');\n            if (!this.state.stopSelectedBool) {\n                this.setState({\n                    stopSelectedBool: true,\n                    tripsDiv: <TripsForRouteDiv stopNo={this.state.stopNo} route={this.state.route.routeNo} stop={this.state.tripsForStop}/>\n\n            });\n         //   }\n           // this.props.history.push('/');\n            //path is ok!!!\n       //     console.log('path from history: ', this.props.history);\n            }\n    }\n\n    handleButton(route) {\n        // event.preventDefault();\n        if(this.state.route === null || this.state.route.routeNo !== route.routeNo) {\n            axios.get(\"http://localhost:8080/GetNextTripsForStopResult/\".concat(this.state.stopNo).concat(\"/\")\n                .concat(route.routeNo)).then(res => {\n                console.log(res);\n                // stop = res.data;\n                // this.setState({tripsDiv: <TripsForRouteDiv stopNo={this.state.stopNo} route={route.routeNo} stop={res.data}/>});\n                this.setState({route: route, tripsForStop: res.data, stopSelectedBool: true});\n                this.setState({tripsDiv: <TripsForRouteDiv stopNo={this.state.stopNo} route={this.state.route.routeNo} stop={this.state.tripsForStop}/>});\n                // this.state.tripsDiv = <TripsForRouteDiv stopNo={this.state.stopNo} route={route.routeNo} stop={res.data}/>;\n                // this.state.tripsDiv.setState({stop: res.data});\n\n            }).catch((error) => {\n                //this.setState({stop: null});\n                this.setState({tripsForStop: null, tripsDiv: null});\n                console.log(error);\n            });\n            //return (\n           // );\n        }\n        else{\n            this.setState({stopSelectedBool: true});\n        }\n        //const [stop, setStop] = useState([]);\n        // if(this.state.stopNo === ''){\n        //         //     this.setState({stopNo: 0});\n        //         // }\n        //         // axios.get(\"http://localhost:8080/GetRouteSummaryForStopResult/\".concat(this.state.stopNo)).then(res => {\n        //         //     console.log(res);\n        //         //\n        //         //     this.setState({stop: res.data, submitted: true});\n        //         // }).catch((error)=> {\n        //         //     this.setState({stop: null, submitted: false});\n        //         //     console.log(error);\n        //         // });\n    }\n\n     render() {\n          let tripsDiv = null;\n         if(this.state.tripsForStop !== null){\n             //tripsDiv = <TripsForRouteDiv stopNo={this.state.stopNo} route={this.state.route.routeNo} stop={this.state.tripsForStop}/>;\n             //this.setState({tripsDiv: <TripsForRouteDiv stopNo={this.state.stopNo} route={this.state.route.routeNo} stop={this.state.tripsForStop}/>});\n         }\n         // else{\n         //\n         // }\n         if (this.state.stopDescription != null) {\n             //this.state.stopSelectedBool = true;\n             return (<div><div><h2>{this.state.stopNo}</h2>\n                     <h2>{this.state.stopDescription}</h2>\n                     {/*<ul>*/}\n                     {this.state.stop.routes.route.map(route => (\n                         // <button key={route.routeNo}\n                         //         onClick={() => this.handleButton(route)}>\n                         //     {route.routeNo} {route.routeHeading}\n                         // </button>\n                         <RouteButton key={route.routeNo + route.routeHeading}\n                             route = {route}\n                             onButtonClick = {this.handleButton}>\n                         </RouteButton>\n                         //TODO: all routes button!!!!\n                     ))}\n                     {/*</ul>*/}\n                 </div>\n                 <div>{this.state.tripsDiv}</div>\n             </div>\n             );\n         } else {\n             return (<div><h1>Invalid stop number</h1></div>\n             );\n         }\n     }\n}\n\nclass RouteButton extends React.Component {\n\n\n    handleButton = () => {\n        this.props.onButtonClick(this.props.route);\n    }\n\n    render() {\n        return (\n            <button onClick={this.handleButton}>\n                {this.props.route.routeNo} {this.props.route.routeHeading}\n            </button>\n        );\n    }\n}\n\nclass TripsForRouteDiv extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        // let date = new Date(), date = today.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n\n        // this.state = {\n        //\n        //     currentTime: time\n        //\n        // }\n\n        this.state = {\n            stop: props.stop,\n            stopNo: props.stopNo,\n            route: props.route,\n            // stopDescription: props.stop.stopDescription,\n            // stopSelectedBool: false,\n            dateVar: null,\n            arrivalTimeVar: null\n        };\n\n         //this.handleChange = this.handleChange.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n        // this.handleButton = this.handleButton.bind(this);\n    }\n\n    componentDidUpdate(){\n        this.render();\n    }\n\n    render() {\n\n\n\n        return (\n            <div><h2>{this.state.stop.stopNo}</h2>\n                <h2>{this.state.stop.stopLabel}</h2>\n                {/*{this.state.stop.route.routeDirection.trips.trip.map(trip => (*/}\n                {/*    <button key={trip.routeNo}>*/}\n                {/*        {this.state.route} {trip.tripDestination} {trip.tripStartTime}*/}\n                {/*    </button>*/}\n                {/*))}*/}\n                {this.state.stop.route.routeDirection.map(routeDirection => (\n                    routeDirection.trips.trip.map( trip =>\n                        //adjustmentAge is -1 -> no gps\n                        // <button key={trip.tripStartTime}>\n                        //     {this.state.route} {trip.tripDestination} scheduled @\n                        //     {\n                        //     trip.adjustedScheduleTime\n                        //     }\n                        //     {\" | \"}\n                        //     GPS: {trip.adjustmentAge === \"-1\"? \"no\": \"yes\"}\n                        // </button>\n                        <TripButton key={trip.tripStartTime} route={this.state.route} trip={trip} />\n                    )))}\n            </div>\n        );\n    }\n}\n\nclass TripButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            route: props.route,\n            trip: props.trip,\n        };\n    }\n\n    handleButton = () => {\n        this.props.onButtonClick(this.props.route);\n    }\n\n    render() {\n        let time = new Date();\n        time.setHours(time.getHours(),time.getMinutes() + this.props.trip.adjustedScheduleTime,0,0);\n\n        return (\n            <button onClick={this.handleButton} key={this.state.trip.tripStartTime}>\n                {this.state.route} {this.state.trip.tripDestination} in {this.state.trip.adjustedScheduleTime} minutes @\n                {time}\n                {\" | \"}\n                GPS: {this.state.trip.adjustmentAge === \"-1\"? \"no\": \"yes\"}\n            </button>\n        );\n    }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <h1>OCTracker</h1>\n      {/*<RouteSummaryForStop />*/}\n      <StopForm />\n      {/*<header className=\"App-header\">*/}\n      {/*  <img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n      {/*  <p>*/}\n      {/*    Edit <code>src/App.js</code> and save to reload.*/}\n      {/*  </p>*/}\n      {/*  <a*/}\n      {/*    className=\"App-link\"*/}\n      {/*    href=\"https://reactjs.org\"*/}\n      {/*    target=\"_blank\"*/}\n      {/*    rel=\"noopener noreferrer\"*/}\n      {/*  >*/}\n      {/*    Learn React */}\n      {/*  </a>*/}\n      {/*</header>*/}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}